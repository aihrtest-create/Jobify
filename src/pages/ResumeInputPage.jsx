import React, { useState, useRef } from 'react'
import { useNavigate } from 'react-router-dom'

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–≤–æ–¥–∞ —Ä–µ–∑—é–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–µ—Å—Ç–∏ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑—é–º–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
 * @returns {JSX.Element} –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–≤–æ–¥–∞ —Ä–µ–∑—é–º–µ
 */
const ResumeInputPage = () => {
  const navigate = useNavigate()
  const fileInputRef = useRef(null)
  const [resumeText, setResumeText] = useState('')
  const [uploadedFile, setUploadedFile] = useState(null)
  const [isDragOver, setIsDragOver] = useState(false)

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  React.useEffect(() => {
    try {
      const existingResumeData = JSON.parse(localStorage.getItem('resumeData') || '{}')
      if (existingResumeData.text) {
        setResumeText(existingResumeData.text)
        console.log('üìù –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∑—é–º–µ:', error)
    }
  }, [])

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∑—é–º–µ
   * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è textarea
   */
  const handleChange = (e) => {
    setResumeText(e.target.value)
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
   * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
   */
  const handleFileUpload = (e) => {
    const file = e.target.files[0]
    if (file) {
      setUploadedFile(file)
      // TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ (–∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞)
      console.log('–§–∞–π–ª —Ä–µ–∑—é–º–µ –∑–∞–≥—Ä—É–∂–µ–Ω:', file.name)
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ drag and drop
   * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
   */
  const handleDragOver = (e) => {
    e.preventDefault()
    setIsDragOver(true)
  }

  const handleDragLeave = (e) => {
    e.preventDefault()
    setIsDragOver(false)
  }

  const handleDrop = (e) => {
    e.preventDefault()
    setIsDragOver(false)
    const file = e.dataTransfer.files[0]
    if (file) {
      setUploadedFile(file)
      console.log('–§–∞–π–ª —Ä–µ–∑—é–º–µ –ø–µ—Ä–µ—Ç–∞—â–µ–Ω:', file.name)
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—é–º–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –¥–∞—à–±–æ—Ä–¥—É
   * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
   */
  const handleSubmit = (e) => {
    e.preventDefault()
    
    if (!resumeText.trim() && !uploadedFile) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª')
      return
    }
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ –∏ –∏–Ω—Ç–µ—Ä–≤—å—é –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö
    localStorage.removeItem('resumeData')
    localStorage.removeItem('interviews')
    console.log('üóëÔ∏è –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ –∏ –∏–Ω—Ç–µ—Ä–≤—å—é –æ—á–∏—â–µ–Ω—ã')
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ –≤ localStorage –≤ –Ω–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    const newResumeData = {
      // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: –æ—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è API
      text: resumeText, // –≠—Ç–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ resumeText –≤ API
      content: resumeText, // –î—É–±–ª–∏—Ä—É–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      
      // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      uploadedFile: uploadedFile ? uploadedFile.name : null,
      updatedAt: new Date().toISOString()
    }
    
    localStorage.setItem('resumeData', JSON.stringify(newResumeData))
    console.log('‚úÖ –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', newResumeData)
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–∞—à–±–æ—Ä–¥—É
    navigate('/dashboard')
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞ –≤–≤–æ–¥–∞ —Ä–µ–∑—é–º–µ
   * –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –¥–∞—à–±–æ—Ä–¥—É –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
   */
  const handleSkip = () => {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–∞—à–±–æ—Ä–¥—É –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—é–º–µ
    navigate('/dashboard')
  }

  return (
    <div className="max-w-2xl mx-auto px-4 sm:px-6">
      <div className="mb-8 sm:mb-10">
        <h1 className="text-2xl sm:text-3xl font-bold text-primary-900 mb-3 sm:mb-4">
          –í–∞—à–µ —Ä–µ–∑—é–º–µ
        </h1>
        <p className="text-sm sm:text-base text-primary-500">
          –í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ —Ä–µ–∑—é–º–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –∏–Ω—Ç–µ—Ä–≤—å—é
        </p>
      </div>

      <form onSubmit={handleSubmit} className="card space-y-4 sm:space-y-6">
        {/* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ */}
        <div>
          <label className="block text-sm font-medium text-primary-900 mb-2">
            –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Ä–µ–∑—é–º–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          </label>
          <div
            className={`border-2 border-dashed rounded-2xl p-4 text-center transition-colors ${
              isDragOver 
                ? 'border-primary-500 bg-primary-50' 
                : 'border-gray-200 hover:border-gray-300'
            }`}
            onDragOver={handleDragOver}
            onDragLeave={handleDragLeave}
            onDrop={handleDrop}
          >
            {uploadedFile ? (
              <div className="space-y-2">
                <div className="text-primary-900 font-medium">
                  üìÑ {uploadedFile.name}
                </div>
                <button
                  type="button"
                  onClick={() => setUploadedFile(null)}
                  className="text-sm text-primary-500 hover:text-primary-700"
                >
                  –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª
                </button>
              </div>
            ) : (
              <div className="space-y-1">
                <div className="text-3xl">üìÅ</div>
                <div className="text-primary-900 font-medium text-sm">
                  –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞ –∏–ª–∏
                </div>
                <button
                  type="button"
                  onClick={() => fileInputRef.current?.click()}
                  className="text-primary-500 hover:text-primary-700 underline text-sm"
                >
                  –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª
                </button>
                <div className="text-xs text-primary-400">
                  PDF, DOC, DOCX, TXT
                </div>
              </div>
            )}
            <input
              ref={fileInputRef}
              type="file"
              accept=".pdf,.doc,.docx,.txt"
              onChange={handleFileUpload}
              className="hidden"
            />
          </div>
        </div>

        <div className="text-center text-sm text-primary-500">
          –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∏–∂–µ
        </div>

        <div>
          <label htmlFor="resume" className="block text-sm font-medium text-primary-900 mb-2">
            –¢–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ
          </label>
          <textarea
            id="resume"
            name="resume"
            value={resumeText}
            onChange={handleChange}
            rows={5}
            className="input-field"
            placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ —Ä–µ–∑—é–º–µ –∑–¥–µ—Å—å..."
          />
          <p className="text-xs sm:text-sm text-primary-400 mt-2">
            –í–∫–ª—é—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏, –æ–ø—ã—Ç–µ —Ä–∞–±–æ—Ç—ã, –Ω–∞–≤—ã–∫–∞—Ö –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö
          </p>
        </div>

        <div className="bg-blue-50 border border-blue-200 rounded-2xl p-4">
          <h3 className="text-sm font-medium text-blue-900 mb-2">
            üí° –°–æ–≤–µ—Ç
          </h3>
          <p className="text-xs sm:text-sm text-blue-700">
            –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –≤–∞—à–µ —Ä–µ–∑—é–º–µ, —Ç–µ–º –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Å–º–æ–∂–µ—Ç –∑–∞–¥–∞—Ç—å –ò–ò-–∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä 
            –∏ —Ç–µ–º –ø–æ–ª–µ–∑–Ω–µ–µ –±—É–¥–µ—Ç –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å.
          </p>
        </div>

        <div className="flex flex-col sm:flex-row gap-3 sm:gap-4 pt-2">
          <button
            type="button"
            onClick={() => navigate('/')}
            className="btn-secondary text-sm py-2 px-4 order-3 sm:order-1"
          >
            ‚Üê –ù–∞–∑–∞–¥
          </button>
          <button
            type="button"
            onClick={handleSkip}
            className="btn-secondary text-sm py-2 px-4 order-2 sm:order-2 border-dashed border-2 border-gray-300 hover:border-gray-400"
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
          </button>
          <button
            type="submit"
            className="btn-accent text-sm py-2 px-6 order-1 sm:order-3 flex-1"
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚Üí
          </button>
        </div>
      </form>
    </div>
  )
}

export default ResumeInputPage
