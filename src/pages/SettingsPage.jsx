import React, { useState, useEffect } from 'react'
import { 
  getSettings, 
  saveSettings, 
  updateLLMSettings, 
  updatePrompt, 
  resetSettings,
  exportSettings,
  importSettings 
} from '../utils/settings'
import apiClient from '../utils/apiClient'
import { clearAllData, showAllData, setTestData } from '../utils/debugUtils'

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å)
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞–º–∏, API –∫–ª—é—á–∞–º–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
 * @returns {JSX.Element} –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
 */
const SettingsPage = () => {
  const [settings, setSettings] = useState(getSettings())
  const [activeTab, setActiveTab] = useState('llm')
  const [saveStatus, setSaveStatus] = useState('')
  const [testStatus, setTestStatus] = useState('')
  const [isTesting, setIsTesting] = useState(false)

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ LLM
   * @param {string} field - –ü–æ–ª–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
   * @param {string} value - –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
   */
  const handleLLMChange = (field, value) => {
    const newLLMSettings = { ...settings.llm, [field]: value }
    const newSettings = { ...settings, llm: newLLMSettings }
    setSettings(newSettings)
    
    if (updateLLMSettings(newLLMSettings)) {
      setSaveStatus('–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ‚úì')
      setTimeout(() => setSaveStatus(''), 2000)
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞
   * @param {string} type - –¢–∏–ø –ø—Ä–æ–º–ø—Ç–∞
   * @param {string} content - –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ–º–ø—Ç–∞
   */
  const handlePromptChange = (type, content) => {
    const newPrompts = { ...settings.prompts, [type]: content }
    const newSettings = { ...settings, prompts: newPrompts }
    setSettings(newSettings)
    
    if (updatePrompt(type, content)) {
      setSaveStatus('–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ‚úì')
      setTimeout(() => setSaveStatus(''), 2000)
    }
  }

  /**
   * –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º
   */
  const handleReset = () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?')) {
      if (resetSettings()) {
        setSettings(getSettings())
        setSaveStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã ‚úì')
        setTimeout(() => setSaveStatus(''), 2000)
      }
    }
  }

  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
   */
  const handleExport = () => {
    const exported = exportSettings()
    const blob = new Blob([exported], { type: 'application/json' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = 'ai-coach-settings.json'
    a.click()
    URL.revokeObjectURL(url)
    
    setSaveStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã ‚úì')
    setTimeout(() => setSaveStatus(''), 2000)
  }

  /**
   * –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
   * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
   */
  const handleImport = (e) => {
    const file = e.target.files[0]
    if (file) {
      const reader = new FileReader()
      reader.onload = (event) => {
        if (importSettings(event.target.result)) {
          setSettings(getSettings())
          setSaveStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã ‚úì')
          setTimeout(() => setSaveStatus(''), 2000)
        } else {
          setSaveStatus('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ‚úó')
          setTimeout(() => setSaveStatus(''), 2000)
        }
      }
      reader.readAsText(file)
    }
    e.target.value = '' // –°–±—Ä–æ—Å input
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
   */
  const handleTestConnection = async () => {
    setIsTesting(true)
    setTestStatus('')
    
    try {
      const result = await apiClient.testConnection(settings.llm.provider)
      
      if (result.success) {
        const providerName = settings.llm.provider === 'gemini' ? 'Gemini' : 'OpenRouter'
        setTestStatus(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ${providerName} API —É—Å–ø–µ—à–Ω–æ!`)
      } else {
        setTestStatus(`‚ùå ${result.error || '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'}`)
      }
    } catch (error) {
      setTestStatus('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è')
    } finally {
      setIsTesting(false)
      setTimeout(() => setTestStatus(''), 5000)
    }
  }

  return (
    <div className="max-w-4xl mx-auto">
      <div className="mb-8">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-4">
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </h1>
            <p className="text-gray-600">
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞–º–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π —Å–∏—Å—Ç–µ–º—ã
            </p>
          </div>
          {saveStatus && (
            <div className="text-green-600 font-medium">
              {saveStatus}
            </div>
          )}
        </div>
      </div>

      {/* –¢–∞–±—ã */}
      <div className="border-b border-gray-200 mb-6">
        <nav className="-mb-px flex space-x-8">
          {[
            { id: 'llm', label: 'LLM –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã', icon: 'ü§ñ' },
            { id: 'prompts', label: '–ü—Ä–æ–º–ø—Ç—ã', icon: 'üìù' },
            { id: 'system', label: '–°–∏—Å—Ç–µ–º–∞', icon: '‚öôÔ∏è' }
          ].map(tab => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id)}
              className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${
                activeTab === tab.id
                  ? 'border-black text-black'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              <span>{tab.icon}</span>
              <span>{tab.label}</span>
            </button>
          ))}
        </nav>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–æ–≤ */}
      {activeTab === 'llm' && (
        <div className="space-y-6">
          <div className="card">
            <h3 className="text-xl font-semibold mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ LLM</h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* –ü—Ä–æ–≤–∞–π–¥–µ—Ä */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ü—Ä–æ–≤–∞–π–¥–µ—Ä
                </label>
                <select
                  value={settings.llm.provider}
                  onChange={(e) => handleLLMChange('provider', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
                >
                  <option value="gemini">Google Gemini</option>
                  <option value="openrouter">OpenRouter</option>
                </select>
              </div>

              {/* –ú–æ–¥–µ–ª—å */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ú–æ–¥–µ–ª—å
                </label>
                <select
                  value={settings.llm.model}
                  onChange={(e) => handleLLMChange('model', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
                >
                  {settings.llm.provider === 'gemini' ? (
                    <>
                      <option value="gemini-1.5-flash-8b">Gemini 1.5 Flash 8B (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)</option>
                      <option value="gemini-1.5-flash">Gemini 1.5 Flash (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –∫–≤–æ—Ç–∞)</option>
                      <option value="gemini-1.5-pro">Gemini 1.5 Pro (–ø–ª–∞—Ç–Ω–∞—è)</option>
                    </>
                  ) : (
                    <>
                      {/* Claude –º–æ–¥–µ–ª–∏ - –æ—Ç–ª–∏—á–Ω—ã–µ –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π */}
                      <option value="anthropic/claude-3-haiku">Claude 3 Haiku (–±—ã—Å—Ç—Ä–∞—è, —ç–∫–æ–Ω–æ–º–∏—á–Ω–∞—è)</option>
                      <option value="anthropic/claude-3-sonnet">Claude 3 Sonnet (–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)</option>
                      <option value="anthropic/claude-3-opus">Claude 3 Opus (–º–æ—â–Ω–∞—è, –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤—å—é)</option>
                      
                      {/* GPT –º–æ–¥–µ–ª–∏ */}
                      <option value="openai/gpt-4">GPT-4 (–ø—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ)</option>
                      <option value="openai/gpt-4-turbo">GPT-4 Turbo (–±—ã—Å—Ç—Ä–∞—è GPT-4)</option>
                      <option value="openai/gpt-3.5-turbo">GPT-3.5 Turbo (–±—ã—Å—Ç—Ä–∞—è, —ç–∫–æ–Ω–æ–º–∏—á–Ω–∞—è)</option>
                      
                      {/* Google –º–æ–¥–µ–ª–∏ */}
                      <option value="google/gemini-pro">Gemini Pro (—á–µ—Ä–µ–∑ OpenRouter)</option>
                      <option value="google/gemini-pro-vision">Gemini Pro Vision</option>
                      
                      {/* Meta –º–æ–¥–µ–ª–∏ */}
                      <option value="meta-llama/llama-3-8b-instruct">Llama 3 8B (–±—ã—Å—Ç—Ä–∞—è, –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)</option>
                      <option value="meta-llama/llama-3-70b-instruct">Llama 3 70B (–º–æ—â–Ω–∞—è)</option>
                      
                      {/* Mistral –º–æ–¥–µ–ª–∏ */}
                      <option value="mistralai/mistral-7b-instruct">Mistral 7B (–±—ã—Å—Ç—Ä–∞—è)</option>
                      <option value="mistralai/mixtral-8x7b-instruct">Mixtral 8x7B (—ç–∫—Å–ø–µ—Ä—Ç–Ω–∞—è)</option>
                      
                      {/* –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ */}
                      <option value="cohere/command-r-plus">Cohere Command R+ (–¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤)</option>
                      <option value="perplexity/llama-3.1-sonar-small-128k-online">Perplexity Sonar (—Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º)</option>
                    </>
                  )}
                </select>
              </div>

              {/* Temperature */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Temperature: {settings.llm.temperature}
                </label>
                <input
                  type="range"
                  min="0"
                  max="2"
                  step="0.1"
                  value={settings.llm.temperature}
                  onChange={(e) => handleLLMChange('temperature', parseFloat(e.target.value))}
                  className="w-full"
                />
                <div className="flex justify-between text-xs text-gray-500 mt-1">
                  <span>–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ</span>
                  <span>–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ</span>
                </div>
              </div>

              {/* Max Tokens */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤
                </label>
                <input
                  type="number"
                  min="100"
                  max="4000"
                  step="100"
                  value={settings.llm.maxTokens}
                  onChange={(e) => handleLLMChange('maxTokens', parseInt(e.target.value))}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
                />
              </div>
            </div>

            {/* API –∫–ª—é—á–∏ */}
            <div className="mt-6 pt-6 border-t border-gray-200">
              <h4 className="text-lg font-medium mb-4">API –∫–ª—é—á–∏</h4>
              <div className="space-y-4">
                {/* Gemini API Key */}
                {settings.llm.provider === 'gemini' && (
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Google Gemini API –∫–ª—é—á
                    </label>
                    <input
                      type="password"
                      value={settings.llm.geminiApiKey || ''}
                      onChange={(e) => handleLLMChange('geminiApiKey', e.target.value)}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Gemini"
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
                    />
                    <p className="text-xs text-gray-500 mt-1">
                      –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ –Ω–∞ <a href="https://aistudio.google.com/app/apikey" target="_blank" rel="noopener noreferrer" className="text-blue-600 hover:underline">Google AI Studio</a>
                    </p>
                  </div>
                )}

                {/* OpenRouter API Key */}
                {settings.llm.provider === 'openrouter' && (
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      OpenRouter API –∫–ª—é—á
                    </label>
                    <input
                      type="password"
                      value={settings.llm.openrouterApiKey || ''}
                      onChange={(e) => handleLLMChange('openrouterApiKey', e.target.value)}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á OpenRouter"
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
                    />
                    <p className="text-xs text-gray-500 mt-1">
                      –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ –Ω–∞ <a href="https://openrouter.ai/keys" target="_blank" rel="noopener noreferrer" className="text-blue-600 hover:underline">OpenRouter Dashboard</a>
                    </p>
                  </div>
                )}
              </div>
            </div>

            {/* –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
            <div className="mt-6 pt-6 border-t border-gray-200">
              <h4 className="text-lg font-medium mb-4">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</h4>
              <div className="flex items-center space-x-4">
                <button
                  onClick={handleTestConnection}
                  disabled={isTesting}
                  className={`px-4 py-2 rounded-md font-medium transition-colors ${
                    isTesting
                      ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                      : 'bg-blue-600 text-white hover:bg-blue-700'
                  }`}
                >
                  {isTesting ? 'üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...' : `üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å ${settings.llm.provider === 'gemini' ? 'Gemini' : 'OpenRouter'} API`}
                </button>
                
                {settings.llm.provider === 'gemini' && settings.llm.model !== 'gemini-1.5-flash' && (
                  <button
                    onClick={() => handleLLMChange('model', 'gemini-1.5-flash')}
                    className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors"
                  >
                    ‚ö° –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ Flash
                  </button>
                )}
                
                {testStatus && (
                  <div className={`text-sm font-medium ${
                    testStatus.includes('‚úÖ') ? 'text-green-600' : 'text-red-600'
                  }`}>
                    {testStatus}
                  </div>
                )}
              </div>
              <p className="text-sm text-gray-500 mt-2">
                –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
              </p>
              
              {settings.llm.provider === 'gemini' && (
                <div className="mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md">
                  <p className="text-sm text-yellow-800">
                    <strong>üí° –°–æ–≤–µ—Ç:</strong> Gemini 1.5 Flash 8B –∏–º–µ–µ—Ç —Å–∞–º—ã–µ –≤—ã—Å–æ–∫–∏–µ –ª–∏–º–∏—Ç—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è. 
                    –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –∫–≤–æ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –º–æ–¥–µ–ª—å.
                  </p>
                </div>
              )}

              {settings.llm.provider === 'openrouter' && (
                <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md">
                  <p className="text-sm text-blue-800">
                    <strong>üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π:</strong>
                  </p>
                  <ul className="text-xs text-blue-700 mt-2 space-y-1">
                    <li>‚Ä¢ <strong>Claude 3 Haiku</strong> - –±—ã—Å—Ç—Ä–∞—è –∏ —ç–∫–æ–Ω–æ–º–∏—á–Ω–∞—è –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –∏–Ω—Ç–µ—Ä–≤—å—é</li>
                    <li>‚Ä¢ <strong>Claude 3 Sonnet</strong> - –ª—É—á—à–∏–π –±–∞–ª–∞–Ω—Å –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏</li>
                    <li>‚Ä¢ <strong>GPT-4</strong> - –ø—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é</li>
                    <li>‚Ä¢ <strong>Llama 3 8B</strong> - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞</li>
                  </ul>
                  <p className="text-xs text-blue-600 mt-2">
                    üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç $0.25 –¥–æ $30 –∑–∞ 1M —Ç–æ–∫–µ–Ω–æ–≤
                  </p>
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      {activeTab === 'prompts' && (
        <div className="space-y-6">
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã */}
          {['interviewer', 'feedback', 'coverLetter'].map(type => {
            const content = settings.prompts[type] || ''
            const titles = {
              interviewer: '–ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–Ω—Ç–µ—Ä–≤—å—é',
              feedback: '–ü—Ä–æ–º–ø—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏',
              coverLetter: '–ü—Ä–æ–º–ø—Ç –¥–ª—è —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞'
            }
            const descriptions = {
              interviewer: '–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –≤–∞–∫–∞–Ω—Å–∏—é –∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.',
              feedback: '–ü—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.',
              coverLetter: '–ü—Ä–æ–º–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞.'
            }
            
            return (
              <div key={type} className="card">
                <h3 className="text-xl font-semibold mb-2">{titles[type]}</h3>
                <div className="mb-4 p-3 bg-blue-50 border border-blue-200 rounded-md">
                  <p className="text-sm text-blue-800">
                    <strong>üí° –û–ø–∏—Å–∞–Ω–∏–µ:</strong> {descriptions[type]}
                  </p>
                </div>
                <textarea
                  value={content}
                  onChange={(e) => handlePromptChange(type, e.target.value)}
                  rows={type === 'interviewer' ? 15 : 12}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent font-mono text-sm"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–ø—Ç..."
                />
                <p className="text-xs text-gray-500 mt-2">
                  –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã: {type === 'feedback' ? '{jobText}, {resumeText}, {conversation}' : '{jobText}, {resumeText}'}
                </p>
              </div>
            )
          })}
        </div>
      )}

      {activeTab === 'system' && (
        <div className="space-y-6">
          <div className="card">
            <h3 className="text-xl font-semibold mb-4">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</h3>
            
            <div className="space-y-4">
              {/* –≠–∫—Å–ø–æ—Ä—Ç/–ò–º–ø–æ—Ä—Ç */}
              <div className="flex flex-wrap gap-4">
                <button
                  onClick={handleExport}
                  className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors"
                >
                  üì• –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                </button>
                
                <label className="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition-colors cursor-pointer">
                  üì§ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                  <input
                    type="file"
                    accept=".json"
                    onChange={handleImport}
                    className="hidden"
                  />
                </label>
              </div>

              {/* –°–±—Ä–æ—Å */}
              <div className="pt-4 border-t border-gray-200">
                <div className="space-y-4">
                  <div>
                    <button
                      onClick={handleReset}
                      className="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors"
                    >
                      üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </button>
                    <p className="text-sm text-gray-500 mt-2">
                      –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
                    </p>
                  </div>
                  
                  <div className="pt-4 border-t border-gray-200">
                    <h4 className="text-md font-medium mb-3">–û—Ç–ª–∞–¥–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h4>
                    <div className="flex flex-wrap gap-2">
                      <button
                        onClick={() => {
                          clearAllData()
                          setSaveStatus('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã ‚úì')
                          setTimeout(() => setSaveStatus(''), 2000)
                        }}
                        className="bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700 transition-colors"
                      >
                        üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                      </button>
                      
                      <button
                        onClick={() => {
                          showAllData()
                          setSaveStatus('–î–∞–Ω–Ω—ã–µ –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å ‚úì')
                          setTimeout(() => setSaveStatus(''), 2000)
                        }}
                        className="bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700 transition-colors"
                      >
                        üìä –ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
                      </button>
                      
                      <button
                        onClick={() => {
                          setTestData()
                          setSaveStatus('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úì')
                          setTimeout(() => setSaveStatus(''), 2000)
                        }}
                        className="bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700 transition-colors"
                      >
                        üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                      </button>
                    </div>
                    <p className="text-sm text-gray-500 mt-2">
                      –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö. –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª–∏: debugUtils.*
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default SettingsPage
